# -*- coding: utf-8 -*-
"""D6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dYZA61024K1iT40evEjkerdyVOplV-vu
"""

from google.colab import drive
drive.mount("/content/gdrive")

pip install --upgrade plotly

import numpy as np
import pandas as pd
import plotly.express as px
import matplotlib.pyplot as plt
from tqdm import tqdm
import plotly.offline as off

# Commented out IPython magic to ensure Python compatibility.
# %cd gdrive/My\ Drive/Data/archive
!ls

df = pd.read_json('unece.json')

df.info()

cdf = pd.read_csv('codes.csv')

codes = {cdf.at[i,"COUNTRY"] : cdf.at[i,"CODE"] for i in range(len(cdf["COUNTRY"]))}
print(codes)

for i in range(len(df['Country'])):
    df.at[i,'Codes'] = codes[df.at[i,'Country']]

df.head()

years = ['2006']
temp = df.loc[df['Year'].isin(years)]
temp.fillna(0, inplace=True)
temp = temp.groupby(by = "Country", as_index = False).mean()

temp["World"] = "World"
temp = temp.rename(columns = {"Exchange rate (XR), NCU per US$" : "XR_NCU",
                          "GDP at current prices and PPPs, millions of US$" : "GDP",
                          "GDP: in construction (ISIC4 F), output approach, per cent share of GVA" : "GDP_construction"})

temp = temp[temp.GDP_construction != 0]

temp["XR"] = temp.apply(lambda row : 1.0/row["XR_NCU"],axis = 1)

temp["Code"] = temp.apply(lambda row : codes[row["Country"]], axis = 1) 

fig = px.choropleth(temp,
                    locations="Code",
                    # color="gender_pay_gap_in_monthly_earnings",
                    color="GDP_construction",
                    hover_name="Country",
                    color_continuous_scale=px.colors.sequential.Viridis,
                    hover_data=["GDP"],
                    title = "GDP from the field of Construction : 2006",
                    range_color = [0,30]
                    # scope='europe'
                    )

off.plot(fig, filename="ConstructionGDP2006.html", auto_open=False)

fig.show()

years = ['2008']
temp = df.loc[df['Year'].isin(years)]
temp.fillna(0, inplace=True)
temp = temp.groupby(by = "Country", as_index = False).mean()

temp["World"] = "World"
temp = temp.rename(columns = {"Exchange rate (XR), NCU per US$" : "XR_NCU",
                          "GDP at current prices and PPPs, millions of US$" : "GDP",
                          "GDP: in construction (ISIC4 F), output approach, per cent share of GVA" : "GDP_construction"})

temp = temp[temp.GDP_construction != 0]

temp["XR"] = temp.apply(lambda row : 1.0/row["XR_NCU"],axis = 1)

temp["Code"] = temp.apply(lambda row : codes[row["Country"]], axis = 1) 
fig = px.choropleth(temp,
                    locations="Code",
                    # color="gender_pay_gap_in_monthly_earnings",
                    color="GDP_construction",
                    hover_name="Country",
                    color_continuous_scale=px.colors.sequential.Viridis,
                    hover_data=["GDP"],
                    title="GDP from the field of Construction : 2008",
                    range_color = [0,30]
                    # scope='europe'
                    )

off.plot(fig, filename="ConstructionGDP2008.html", auto_open=False)

fig.show()

years = ['2012']
temp = df.loc[df['Year'].isin(years)]
temp.fillna(0, inplace=True)
temp = temp.groupby(by = "Country", as_index = False).mean()

temp["World"] = "World"
temp = temp.rename(columns = {"Exchange rate (XR), NCU per US$" : "XR_NCU",
                          "GDP at current prices and PPPs, millions of US$" : "GDP",
                          "GDP: in construction (ISIC4 F), output approach, per cent share of GVA" : "GDP_construction"})

temp = temp[temp.GDP_construction != 0]

temp["XR"] = temp.apply(lambda row : 1.0/row["XR_NCU"],axis = 1)

temp["Code"] = temp.apply(lambda row : codes[row["Country"]], axis = 1) 
fig = px.choropleth(temp,
                    locations="Code",
                    # color="gender_pay_gap_in_monthly_earnings",
                    color="GDP_construction",
                    hover_name="Country",
                    color_continuous_scale=px.colors.sequential.Viridis,
                    hover_data=["GDP"],
                    title="GDP from the field of Construction : 2012",
                    range_color = [0,30]
                    # scope='europe'
                    )

off.plot(fig, filename="ConstructionGDP2012.html", auto_open=False)

fig.show()

years = ['2015']
temp = df.loc[df['Year'].isin(years)]
temp.fillna(0, inplace=True)
temp = temp.groupby(by = "Country", as_index = False).mean()

temp["World"] = "World"
temp = temp.rename(columns = {"Exchange rate (XR), NCU per US$" : "XR_NCU",
                          "GDP at current prices and PPPs, millions of US$" : "GDP",
                          "GDP: in construction (ISIC4 F), output approach, per cent share of GVA" : "GDP_construction"})

temp = temp[temp.GDP_construction != 0]

temp["XR"] = temp.apply(lambda row : 1.0/row["XR_NCU"],axis = 1)

temp["Code"] = temp.apply(lambda row : codes[row["Country"]], axis = 1) 
fig = px.choropleth(temp,
                    locations="Code",
                    # color="gender_pay_gap_in_monthly_earnings",
                    color="GDP_construction",
                    hover_name="Country",
                    color_continuous_scale=px.colors.sequential.Viridis,
                    hover_data=["GDP"],
                    title="GDP from the field of Construction : 2015",
                    range_color = [0,30]
                    # scope='europe'
                    )

off.plot(fig, filename="ConstructionGDP2015.html", auto_open=False)

fig.show()

