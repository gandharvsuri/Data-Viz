# -*- coding: utf-8 -*-
"""SpecificPlotsD1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17Lx4_XsApQPESUbg5meUAPlh8DYPiJge
"""

from google.colab import drive

drive.mount("/content/gdrive")

#!apt install proj-bin libproj-dev libgeos-dev

#!pip install https://github.com/matplotlib/basemap/archive/master.zip

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
from glob import glob
import os
import pickle
import matplotlib
import matplotlib.pyplot as plt
from mpl_toolkits.basemap import Basemap
import matplotlib.animation as animation

# Commented out IPython magic to ensure Python compatibility.
# %cd gdrive/My\ Drive/Datathon1

with open("date-long-lat_1.pkl",'rb') as pkl_dlt:
  date_array, long_array, lat_array = pickle.load(pkl_dlt)

with open("SSH-SSS-SST.pkl",'rb') as file_pkl:
  grid_array = pickle.load(file_pkl)

print(np.shape(grid_array))


















#SSHA

# 187 longitudes ranging in [29.8892W,119.8237W]
# 188 latitudes ranging in [29.7511S, 29.7511N]
lon_0 = np.mean([29.8892,119.8237])
lat_0 = np.mean([29.7511, 29.7511])


# lat (min,max) = (-29.7511,29.7511)
# long (min,max) = (29.8893,119.8237)

LON,LAT = np.meshgrid(long_array,lat_array)
levels = np.linspace(0.0,1.0,25)

Attr = ["SSHA"]
for a in range(len(Attr)):
  for d in [28]: # Spike on eastern coast
    fig = plt.figure(figsize=(16, 8),dpi = 80)

    map = Basemap(projection='cyl', resolution='c',lat_0=lat_0, lon_0=lon_0,llcrnrlat = -29.7511, urcrnrlat=29.7511,llcrnrlon=29.8893,urcrnrlon=119.8237)
    # map.drawcoastlines()
    map.drawcountries()
    map.drawparallels(np.arange(-90.,90.,10),labels=[1,0,0,0],fontsize = 18)
    map.drawmeridians(np.arange(-180.,180.,10),labels=[0,0,0,1],fontsize = 18)
    fig.suptitle(Attr[a], fontsize = 30)
    inf_min = np.nanmin(grid_array[0])
    inf_max = np.nanmax(grid_array[0])
    x,y = map(LON, LAT)
    tx,ty = map(3.316,95.854)

    CS = map.contourf(LON,LAT,(grid_array[0][d]-inf_min)/(inf_max-inf_min),levels = levels, extend = 'both')
    plt.title(date_array[d],fontsize = 15)
    map.plot(tx,ty,'ok',markersize = 15)
    cbar = map.colorbar()
    txt = "Range of values   0: "+str(inf_min) + "    1: "+str(inf_max)
    fig.text(.5, 0.05, txt, ha='center',fontsize = 15)
    plt.savefig(Attr[a]+" "+date_array[d]+".png")
    plt.show()



















#SST

# 187 longitudes ranging in [29.8892W,119.8237W]
# 188 latitudes ranging in [29.7511S, 29.7511N]
lon_0 = np.mean([29.8892,119.8237])
lat_0 = np.mean([29.7511, 29.7511])


# lat (min,max) = (-29.7511,29.7511)
# long (min,max) = (29.8893,119.8237)

LON,LAT = np.meshgrid(long_array,lat_array)
levels = np.linspace(0.0,1.0,25)

Attr = ["SST"]
for a in range(len(Attr)):
  for d in [27,73]: # summer and winter
    fig = plt.figure(figsize=(16, 8),dpi = 80)

    map = Basemap(projection='cyl', resolution='c',lat_0=lat_0, lon_0=lon_0,llcrnrlat = -29.7511, urcrnrlat=29.7511,llcrnrlon=29.8893,urcrnrlon=119.8237)
    # map.drawcoastlines()
    map.drawcountries()
    map.drawparallels(np.arange(-90.,90.,10),labels=[1,0,0,0],fontsize = 18)
    map.drawmeridians(np.arange(-180.,180.,10),labels=[0,0,0,1],fontsize = 18)
    fig.suptitle(Attr[a], fontsize = 30)
    inf_min = np.nanmin(grid_array[2])
    inf_max = np.nanmax(grid_array[2])
    x,y = map(LON, LAT)
    tx,ty = map(3.316,95.854)

    CS = map.contourf(LON,LAT,(grid_array[2][d]-inf_min)/(inf_max-inf_min),levels = levels, extend = 'both')
    plt.title(date_array[d],fontsize = 15)
    map.plot(tx,ty,'ok',markersize = 15)
    cbar = map.colorbar()
    txt = "Range of values   0: "+str(inf_min) + "    1: "+str(inf_max)
    fig.text(.5, 0.05, txt, ha='center',fontsize = 15)
    plt.savefig(Attr[a]+" "+date_array[d]+".png")
    plt.show()

with open("date-long-lat_2.pkl",'rb') as pkl_dlt:
  date_array, long_array, lat_array = pickle.load(pkl_dlt)

with open("meridonal_zonal.pkl",'rb') as file_pkl:
  grid_array = pickle.load(file_pkl)

print(np.shape(grid_array))

















# Current speed sharp increase on eastern coast of India Feb-March and then in Dec


# 187 longitudes ranging in [20W,120W]
# 188 latitudes ranging in [30.0005S, 30.0005N]
lon_0 = np.mean([30,120])
lat_0 = np.mean([30.0005, 30.0005])

# lat (min,max) = (-30.0005 30.0005)
# long (min,max) = (30.0 120.0)

LON,LAT = np.meshgrid(long_array,lat_array)

for d in [68,85]: # Spike on Indian Coast
  fig = plt.figure(figsize=(16, 8),dpi = 80)

  map = Basemap(projection='cyl', resolution='c',lat_0=lat_0, lon_0=lon_0,llcrnrlat = -30.0005, urcrnrlat=30.0,llcrnrlon=30.0005,urcrnrlon=120.0)
  map.drawcoastlines()# 113: 2
  map.drawparallels(np.arange(-90.,90.,10),labels=[1,0,0,0],fontsize = 18)
  map.drawmeridians(np.arange(-180.,180.,10),labels=[0,0,0,1],fontsize = 18)
  fig.suptitle("CURRENTS' VELOCITY", fontsize = 30)

  stp = 2
  X , Y= map(LAT,LON)
  tx,ty = map(19.0760,72.8777)
  x = X[d::stp,0::stp]   #plot arrows with stp = 2
  y = Y[d::stp,0::stp]
  uplt = -1*grid_array[0][d]
  vplt = -1*grid_array[1][d]
  Q = map.quiver(LON,LAT,uplt,vplt,color='k',scale=100,pivot = 'mid')
  # map.plot(tx,ty,'bo',markersize = 15)
  plt.title(date_array[d],fontsize = 15)

  plt.savefig(date_array[d]+" currents veloity.png")
  plt.show()
