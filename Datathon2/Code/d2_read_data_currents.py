# -*- coding: utf-8 -*-
"""D2_Read_Data_Currents.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eCiCG0qbU_bqW6aB8CPUYinjOb8ejULn
"""

from google.colab import drive
drive.mount("/content/gdrive")

# Commented out IPython magic to ensure Python compatibility.
# %cd gdrive/My\ Drive

import numpy as np
from glob import glob
import os
import pickle

dir_names = np.array(glob('Currents/*'))
print(dir_names)

ignore_header_number_lines = 11
num_long = 181
num_lat = 189
num_depths = 23
num_lines = num_long*num_lat
init_line_index = ignore_header_number_lines
long_line_index = init_line_index + num_long

dir_names = ['Currents/meridional-current_3D', 'Currents/zonal-current_3D']
for d, dname in enumerate(dir_names):
  dates = []
  longitudes = []
  latitudes = []
  depths = []
  values = []
  filenames = np.array(glob(dname+"/*"))
  filenames.sort()
  k = 0
  print(dname)
  for m, curfile in enumerate(filenames):
    long_array = []
    lat_array = []
    depth_array = []
    value_array = []
    if curfile[-3:] == "txt":
      print("-------- Reading "+curfile+" -------")
      with open(curfile) as fp:
        for i, line in enumerate(fp):
          
          if i >= init_line_index:
            ii = i
            result = [x.strip() for x in line.split(',')]
            # print(result)

            if(result[4] == '85'):
              break

            if result[5] != '-1.E+34':
              value_array.append(float(result[5]))
            else:
              value_array.append(None)
            if i == init_line_index:
              dates.append(result[0])

            long_array.append(float(result[2]))
            lat_array.append(float(result[3]))
            depth_array.append(-1*float(result[4]))            

      latitudes.append(lat_array)
      longitudes.append(long_array)
      depths.append(depth_array)
      values.append(value_array)



  with open(dname+".pkl","wb") as pkl_dltd:
    pickle.dump([longitudes,latitudes,depths,values], pkl_dltd)

  print(np.shape(latitudes))
  print(np.shape(longitudes))
  print(np.shape(depths))
  print(np.shape(values))